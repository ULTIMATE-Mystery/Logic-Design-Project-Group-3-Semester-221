-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity a0_xFGradientY3x3_0_0_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    t0_V : IN STD_LOGIC_VECTOR (7 downto 0);
    t1_V : IN STD_LOGIC_VECTOR (7 downto 0);
    t2_V : IN STD_LOGIC_VECTOR (7 downto 0);
    b0_V : IN STD_LOGIC_VECTOR (7 downto 0);
    b1_V : IN STD_LOGIC_VECTOR (7 downto 0);
    b2_V : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of a0_xFGradientY3x3_0_0_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal r_V_fu_102_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_reg_205 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal r_V_1_fu_116_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_1_reg_210 : STD_LOGIC_VECTOR (8 downto 0);
    signal out_pix_fu_122_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal out_pix_reg_215 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal M00_fu_70_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal M01_fu_82_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal lhs_V_fu_94_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_fu_98_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal lhs_V_1_fu_108_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_1_fu_112_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal M01_cast_fu_90_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal M00_cast_fu_78_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal A00_cast_fu_128_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal out_pix_cast_fu_134_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal out_pix_1_fu_137_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal S00_cast_fu_131_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal out_pix_2_fu_143_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_6_fu_161_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_5_fu_153_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_s_fu_177_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_171_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_191_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_cast_fu_183_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal g_y_V_fu_149_p1 : STD_LOGIC_VECTOR (7 downto 0);


begin



    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then
                    out_pix_reg_215(9 downto 1) <= out_pix_fu_122_p2(9 downto 1);
                r_V_1_reg_210 <= r_V_1_fu_116_p2;
                r_V_reg_205 <= r_V_fu_102_p2;
            end if;
        end if;
    end process;
    out_pix_reg_215(0) <= '0';
    A00_cast_fu_128_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_reg_205),11));
    M00_cast_fu_78_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(M00_fu_70_p3),10));
    M00_fu_70_p3 <= (t1_V & ap_const_lv1_0);
    M01_cast_fu_90_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(M01_fu_82_p3),10));
    M01_fu_82_p3 <= (b1_V & ap_const_lv1_0);
    S00_cast_fu_131_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_1_reg_210),11));
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
    ap_return <= 
        p_cast_fu_183_p3 when (tmp_fu_191_p2(0) = '1') else 
        g_y_V_fu_149_p1;
    g_y_V_fu_149_p1 <= out_pix_2_fu_143_p2(8 - 1 downto 0);
    icmp_fu_171_p2 <= "1" when (signed(tmp_6_fu_161_p4) > signed(ap_const_lv3_0)) else "0";
    lhs_V_1_fu_108_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t0_V),9));
    lhs_V_fu_94_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b0_V),9));
    not_tmp_s_fu_177_p2 <= (tmp_5_fu_153_p3 xor ap_const_lv1_1);
    out_pix_1_fu_137_p2 <= std_logic_vector(unsigned(A00_cast_fu_128_p1) + unsigned(out_pix_cast_fu_134_p1));
    out_pix_2_fu_143_p2 <= std_logic_vector(unsigned(out_pix_1_fu_137_p2) - unsigned(S00_cast_fu_131_p1));
        out_pix_cast_fu_134_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(out_pix_reg_215),11));

    out_pix_fu_122_p2 <= std_logic_vector(unsigned(M01_cast_fu_90_p1) - unsigned(M00_cast_fu_78_p1));
    p_cast_fu_183_p3 <= 
        ap_const_lv8_FF when (not_tmp_s_fu_177_p2(0) = '1') else 
        ap_const_lv8_0;
    r_V_1_fu_116_p2 <= std_logic_vector(unsigned(lhs_V_1_fu_108_p1) + unsigned(rhs_V_1_fu_112_p1));
    r_V_fu_102_p2 <= std_logic_vector(unsigned(lhs_V_fu_94_p1) + unsigned(rhs_V_fu_98_p1));
    rhs_V_1_fu_112_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t2_V),9));
    rhs_V_fu_98_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b2_V),9));
    tmp_5_fu_153_p3 <= out_pix_2_fu_143_p2(10 downto 10);
    tmp_6_fu_161_p4 <= out_pix_2_fu_143_p2(10 downto 8);
    tmp_fu_191_p2 <= (tmp_5_fu_153_p3 or icmp_fu_171_p2);
end behav;
