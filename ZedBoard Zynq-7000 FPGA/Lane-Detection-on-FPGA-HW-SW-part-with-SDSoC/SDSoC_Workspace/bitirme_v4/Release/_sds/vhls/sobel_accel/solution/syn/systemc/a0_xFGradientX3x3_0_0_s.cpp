// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "a0_xFGradientX3x3_0_0_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic a0_xFGradientX3x3_0_0_s::ap_const_logic_1 = sc_dt::Log_1;
const bool a0_xFGradientX3x3_0_0_s::ap_const_boolean_1 = true;
const bool a0_xFGradientX3x3_0_0_s::ap_const_boolean_0 = false;
const sc_lv<1> a0_xFGradientX3x3_0_0_s::ap_const_lv1_0 = "0";
const sc_lv<32> a0_xFGradientX3x3_0_0_s::ap_const_lv32_A = "1010";
const sc_lv<32> a0_xFGradientX3x3_0_0_s::ap_const_lv32_8 = "1000";
const sc_lv<3> a0_xFGradientX3x3_0_0_s::ap_const_lv3_0 = "000";
const sc_lv<1> a0_xFGradientX3x3_0_0_s::ap_const_lv1_1 = "1";
const sc_lv<8> a0_xFGradientX3x3_0_0_s::ap_const_lv8_FF = "11111111";
const sc_lv<8> a0_xFGradientX3x3_0_0_s::ap_const_lv8_0 = "00000000";
const sc_logic a0_xFGradientX3x3_0_0_s::ap_const_logic_0 = sc_dt::Log_0;

a0_xFGradientX3x3_0_0_s::a0_xFGradientX3x3_0_0_s(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_A00_cast_fu_128_p1);
    sensitive << ( r_V_reg_205 );

    SC_METHOD(thread_M00_cast_fu_78_p1);
    sensitive << ( M00_fu_70_p3 );

    SC_METHOD(thread_M00_fu_70_p3);
    sensitive << ( m0_V );

    SC_METHOD(thread_M01_cast_fu_90_p1);
    sensitive << ( M01_fu_82_p3 );

    SC_METHOD(thread_M01_fu_82_p3);
    sensitive << ( m2_V );

    SC_METHOD(thread_S00_cast_fu_131_p1);
    sensitive << ( r_V_2_reg_210 );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_ce );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_fu_191_p2 );
    sensitive << ( p_cast_fu_183_p3 );
    sensitive << ( g_x_V_fu_149_p1 );

    SC_METHOD(thread_g_x_V_fu_149_p1);
    sensitive << ( out_pix_4_fu_143_p2 );

    SC_METHOD(thread_icmp_fu_171_p2);
    sensitive << ( ap_ce );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_9_fu_161_p4 );

    SC_METHOD(thread_lhs_V_2_fu_108_p1);
    sensitive << ( t0_V );

    SC_METHOD(thread_lhs_V_fu_94_p1);
    sensitive << ( t2_V );

    SC_METHOD(thread_not_tmp_s_fu_177_p2);
    sensitive << ( tmp_8_fu_153_p3 );

    SC_METHOD(thread_out_pix_3_fu_137_p2);
    sensitive << ( A00_cast_fu_128_p1 );
    sensitive << ( out_pix_cast_fu_134_p1 );

    SC_METHOD(thread_out_pix_4_fu_143_p2);
    sensitive << ( out_pix_3_fu_137_p2 );
    sensitive << ( S00_cast_fu_131_p1 );

    SC_METHOD(thread_out_pix_cast_fu_134_p1);
    sensitive << ( out_pix_reg_215 );

    SC_METHOD(thread_out_pix_fu_122_p2);
    sensitive << ( M01_cast_fu_90_p1 );
    sensitive << ( M00_cast_fu_78_p1 );

    SC_METHOD(thread_p_cast_fu_183_p3);
    sensitive << ( not_tmp_s_fu_177_p2 );

    SC_METHOD(thread_r_V_2_fu_116_p2);
    sensitive << ( lhs_V_2_fu_108_p1 );
    sensitive << ( rhs_V_2_fu_112_p1 );

    SC_METHOD(thread_r_V_fu_102_p2);
    sensitive << ( lhs_V_fu_94_p1 );
    sensitive << ( rhs_V_fu_98_p1 );

    SC_METHOD(thread_rhs_V_2_fu_112_p1);
    sensitive << ( b0_V );

    SC_METHOD(thread_rhs_V_fu_98_p1);
    sensitive << ( b2_V );

    SC_METHOD(thread_tmp_8_fu_153_p3);
    sensitive << ( out_pix_4_fu_143_p2 );

    SC_METHOD(thread_tmp_9_fu_161_p4);
    sensitive << ( out_pix_4_fu_143_p2 );

    SC_METHOD(thread_tmp_fu_191_p2);
    sensitive << ( tmp_8_fu_153_p3 );
    sensitive << ( icmp_fu_171_p2 );

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "a0_xFGradientX3x3_0_0_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, t0_V, "(port)t0_V");
    sc_trace(mVcdFile, t2_V, "(port)t2_V");
    sc_trace(mVcdFile, m0_V, "(port)m0_V");
    sc_trace(mVcdFile, m2_V, "(port)m2_V");
    sc_trace(mVcdFile, b0_V, "(port)b0_V");
    sc_trace(mVcdFile, b2_V, "(port)b2_V");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
    sc_trace(mVcdFile, ap_ce, "(port)ap_ce");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, r_V_fu_102_p2, "r_V_fu_102_p2");
    sc_trace(mVcdFile, r_V_reg_205, "r_V_reg_205");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, r_V_2_fu_116_p2, "r_V_2_fu_116_p2");
    sc_trace(mVcdFile, r_V_2_reg_210, "r_V_2_reg_210");
    sc_trace(mVcdFile, out_pix_fu_122_p2, "out_pix_fu_122_p2");
    sc_trace(mVcdFile, out_pix_reg_215, "out_pix_reg_215");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, M00_fu_70_p3, "M00_fu_70_p3");
    sc_trace(mVcdFile, M01_fu_82_p3, "M01_fu_82_p3");
    sc_trace(mVcdFile, lhs_V_fu_94_p1, "lhs_V_fu_94_p1");
    sc_trace(mVcdFile, rhs_V_fu_98_p1, "rhs_V_fu_98_p1");
    sc_trace(mVcdFile, lhs_V_2_fu_108_p1, "lhs_V_2_fu_108_p1");
    sc_trace(mVcdFile, rhs_V_2_fu_112_p1, "rhs_V_2_fu_112_p1");
    sc_trace(mVcdFile, M01_cast_fu_90_p1, "M01_cast_fu_90_p1");
    sc_trace(mVcdFile, M00_cast_fu_78_p1, "M00_cast_fu_78_p1");
    sc_trace(mVcdFile, A00_cast_fu_128_p1, "A00_cast_fu_128_p1");
    sc_trace(mVcdFile, out_pix_cast_fu_134_p1, "out_pix_cast_fu_134_p1");
    sc_trace(mVcdFile, out_pix_3_fu_137_p2, "out_pix_3_fu_137_p2");
    sc_trace(mVcdFile, S00_cast_fu_131_p1, "S00_cast_fu_131_p1");
    sc_trace(mVcdFile, out_pix_4_fu_143_p2, "out_pix_4_fu_143_p2");
    sc_trace(mVcdFile, tmp_9_fu_161_p4, "tmp_9_fu_161_p4");
    sc_trace(mVcdFile, tmp_8_fu_153_p3, "tmp_8_fu_153_p3");
    sc_trace(mVcdFile, not_tmp_s_fu_177_p2, "not_tmp_s_fu_177_p2");
    sc_trace(mVcdFile, icmp_fu_171_p2, "icmp_fu_171_p2");
    sc_trace(mVcdFile, tmp_fu_191_p2, "tmp_fu_191_p2");
    sc_trace(mVcdFile, p_cast_fu_183_p3, "p_cast_fu_183_p3");
    sc_trace(mVcdFile, g_x_V_fu_149_p1, "g_x_V_fu_149_p1");
#endif

    }
}

a0_xFGradientX3x3_0_0_s::~a0_xFGradientX3x3_0_0_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void a0_xFGradientX3x3_0_0_s::thread_ap_clk_no_reset_() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1))) {
        out_pix_reg_215 = out_pix_fu_122_p2.read();
        r_V_2_reg_210 = r_V_2_fu_116_p2.read();
        r_V_reg_205 = r_V_fu_102_p2.read();
    }
}

void a0_xFGradientX3x3_0_0_s::thread_A00_cast_fu_128_p1() {
    A00_cast_fu_128_p1 = esl_zext<11,9>(r_V_reg_205.read());
}

void a0_xFGradientX3x3_0_0_s::thread_M00_cast_fu_78_p1() {
    M00_cast_fu_78_p1 = esl_zext<10,9>(M00_fu_70_p3.read());
}

void a0_xFGradientX3x3_0_0_s::thread_M00_fu_70_p3() {
    M00_fu_70_p3 = esl_concat<8,1>(m0_V.read(), ap_const_lv1_0);
}

void a0_xFGradientX3x3_0_0_s::thread_M01_cast_fu_90_p1() {
    M01_cast_fu_90_p1 = esl_zext<10,9>(M01_fu_82_p3.read());
}

void a0_xFGradientX3x3_0_0_s::thread_M01_fu_82_p3() {
    M01_fu_82_p3 = esl_concat<8,1>(m2_V.read(), ap_const_lv1_0);
}

void a0_xFGradientX3x3_0_0_s::thread_S00_cast_fu_131_p1() {
    S00_cast_fu_131_p1 = esl_zext<11,9>(r_V_2_reg_210.read());
}

void a0_xFGradientX3x3_0_0_s::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_xFGradientX3x3_0_0_s::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_xFGradientX3x3_0_0_s::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_xFGradientX3x3_0_0_s::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void a0_xFGradientX3x3_0_0_s::thread_ap_return() {
    ap_return = (!tmp_fu_191_p2.read()[0].is_01())? sc_lv<8>(): ((tmp_fu_191_p2.read()[0].to_bool())? p_cast_fu_183_p3.read(): g_x_V_fu_149_p1.read());
}

void a0_xFGradientX3x3_0_0_s::thread_g_x_V_fu_149_p1() {
    g_x_V_fu_149_p1 = out_pix_4_fu_143_p2.read().range(8-1, 0);
}

void a0_xFGradientX3x3_0_0_s::thread_icmp_fu_171_p2() {
    icmp_fu_171_p2 = (!tmp_9_fu_161_p4.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): (sc_bigint<3>(tmp_9_fu_161_p4.read()) > sc_bigint<3>(ap_const_lv3_0));
}

void a0_xFGradientX3x3_0_0_s::thread_lhs_V_2_fu_108_p1() {
    lhs_V_2_fu_108_p1 = esl_zext<9,8>(t0_V.read());
}

void a0_xFGradientX3x3_0_0_s::thread_lhs_V_fu_94_p1() {
    lhs_V_fu_94_p1 = esl_zext<9,8>(t2_V.read());
}

void a0_xFGradientX3x3_0_0_s::thread_not_tmp_s_fu_177_p2() {
    not_tmp_s_fu_177_p2 = (tmp_8_fu_153_p3.read() ^ ap_const_lv1_1);
}

void a0_xFGradientX3x3_0_0_s::thread_out_pix_3_fu_137_p2() {
    out_pix_3_fu_137_p2 = (!A00_cast_fu_128_p1.read().is_01() || !out_pix_cast_fu_134_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(A00_cast_fu_128_p1.read()) + sc_bigint<11>(out_pix_cast_fu_134_p1.read()));
}

void a0_xFGradientX3x3_0_0_s::thread_out_pix_4_fu_143_p2() {
    out_pix_4_fu_143_p2 = (!out_pix_3_fu_137_p2.read().is_01() || !S00_cast_fu_131_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(out_pix_3_fu_137_p2.read()) - sc_biguint<11>(S00_cast_fu_131_p1.read()));
}

void a0_xFGradientX3x3_0_0_s::thread_out_pix_cast_fu_134_p1() {
    out_pix_cast_fu_134_p1 = esl_sext<11,10>(out_pix_reg_215.read());
}

void a0_xFGradientX3x3_0_0_s::thread_out_pix_fu_122_p2() {
    out_pix_fu_122_p2 = (!M01_cast_fu_90_p1.read().is_01() || !M00_cast_fu_78_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(M01_cast_fu_90_p1.read()) - sc_biguint<10>(M00_cast_fu_78_p1.read()));
}

void a0_xFGradientX3x3_0_0_s::thread_p_cast_fu_183_p3() {
    p_cast_fu_183_p3 = (!not_tmp_s_fu_177_p2.read()[0].is_01())? sc_lv<8>(): ((not_tmp_s_fu_177_p2.read()[0].to_bool())? ap_const_lv8_FF: ap_const_lv8_0);
}

void a0_xFGradientX3x3_0_0_s::thread_r_V_2_fu_116_p2() {
    r_V_2_fu_116_p2 = (!lhs_V_2_fu_108_p1.read().is_01() || !rhs_V_2_fu_112_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(lhs_V_2_fu_108_p1.read()) + sc_biguint<9>(rhs_V_2_fu_112_p1.read()));
}

void a0_xFGradientX3x3_0_0_s::thread_r_V_fu_102_p2() {
    r_V_fu_102_p2 = (!lhs_V_fu_94_p1.read().is_01() || !rhs_V_fu_98_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(lhs_V_fu_94_p1.read()) + sc_biguint<9>(rhs_V_fu_98_p1.read()));
}

void a0_xFGradientX3x3_0_0_s::thread_rhs_V_2_fu_112_p1() {
    rhs_V_2_fu_112_p1 = esl_zext<9,8>(b0_V.read());
}

void a0_xFGradientX3x3_0_0_s::thread_rhs_V_fu_98_p1() {
    rhs_V_fu_98_p1 = esl_zext<9,8>(b2_V.read());
}

void a0_xFGradientX3x3_0_0_s::thread_tmp_8_fu_153_p3() {
    tmp_8_fu_153_p3 = out_pix_4_fu_143_p2.read().range(10, 10);
}

void a0_xFGradientX3x3_0_0_s::thread_tmp_9_fu_161_p4() {
    tmp_9_fu_161_p4 = out_pix_4_fu_143_p2.read().range(10, 8);
}

void a0_xFGradientX3x3_0_0_s::thread_tmp_fu_191_p2() {
    tmp_fu_191_p2 = (tmp_8_fu_153_p3.read() | icmp_fu_171_p2.read());
}

}

