// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _a0_xFGradientY3x3_0_0_s_HH_
#define _a0_xFGradientY3x3_0_0_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct a0_xFGradientY3x3_0_0_s : public sc_module {
    // Port declarations 10
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_lv<8> > t0_V;
    sc_in< sc_lv<8> > t1_V;
    sc_in< sc_lv<8> > t2_V;
    sc_in< sc_lv<8> > b0_V;
    sc_in< sc_lv<8> > b1_V;
    sc_in< sc_lv<8> > b2_V;
    sc_out< sc_lv<8> > ap_return;
    sc_in< sc_logic > ap_ce;


    // Module declarations
    a0_xFGradientY3x3_0_0_s(sc_module_name name);
    SC_HAS_PROCESS(a0_xFGradientY3x3_0_0_s);

    ~a0_xFGradientY3x3_0_0_s();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<9> > r_V_fu_102_p2;
    sc_signal< sc_lv<9> > r_V_reg_205;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<9> > r_V_1_fu_116_p2;
    sc_signal< sc_lv<9> > r_V_1_reg_210;
    sc_signal< sc_lv<10> > out_pix_fu_122_p2;
    sc_signal< sc_lv<10> > out_pix_reg_215;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<9> > M00_fu_70_p3;
    sc_signal< sc_lv<9> > M01_fu_82_p3;
    sc_signal< sc_lv<9> > lhs_V_fu_94_p1;
    sc_signal< sc_lv<9> > rhs_V_fu_98_p1;
    sc_signal< sc_lv<9> > lhs_V_1_fu_108_p1;
    sc_signal< sc_lv<9> > rhs_V_1_fu_112_p1;
    sc_signal< sc_lv<10> > M01_cast_fu_90_p1;
    sc_signal< sc_lv<10> > M00_cast_fu_78_p1;
    sc_signal< sc_lv<11> > A00_cast_fu_128_p1;
    sc_signal< sc_lv<11> > out_pix_cast_fu_134_p1;
    sc_signal< sc_lv<11> > out_pix_1_fu_137_p2;
    sc_signal< sc_lv<11> > S00_cast_fu_131_p1;
    sc_signal< sc_lv<11> > out_pix_2_fu_143_p2;
    sc_signal< sc_lv<3> > tmp_6_fu_161_p4;
    sc_signal< sc_lv<1> > tmp_5_fu_153_p3;
    sc_signal< sc_lv<1> > not_tmp_s_fu_177_p2;
    sc_signal< sc_lv<1> > icmp_fu_171_p2;
    sc_signal< sc_lv<1> > tmp_fu_191_p2;
    sc_signal< sc_lv<8> > p_cast_fu_183_p3;
    sc_signal< sc_lv<8> > g_y_V_fu_149_p1;
    static const sc_logic ap_const_logic_1;
    static const bool ap_const_boolean_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_logic ap_const_logic_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_A00_cast_fu_128_p1();
    void thread_M00_cast_fu_78_p1();
    void thread_M00_fu_70_p3();
    void thread_M01_cast_fu_90_p1();
    void thread_M01_fu_82_p3();
    void thread_S00_cast_fu_131_p1();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_return();
    void thread_g_y_V_fu_149_p1();
    void thread_icmp_fu_171_p2();
    void thread_lhs_V_1_fu_108_p1();
    void thread_lhs_V_fu_94_p1();
    void thread_not_tmp_s_fu_177_p2();
    void thread_out_pix_1_fu_137_p2();
    void thread_out_pix_2_fu_143_p2();
    void thread_out_pix_cast_fu_134_p1();
    void thread_out_pix_fu_122_p2();
    void thread_p_cast_fu_183_p3();
    void thread_r_V_1_fu_116_p2();
    void thread_r_V_fu_102_p2();
    void thread_rhs_V_1_fu_112_p1();
    void thread_rhs_V_fu_98_p1();
    void thread_tmp_5_fu_153_p3();
    void thread_tmp_6_fu_161_p4();
    void thread_tmp_fu_191_p2();
};

}

using namespace ap_rtl;

#endif
