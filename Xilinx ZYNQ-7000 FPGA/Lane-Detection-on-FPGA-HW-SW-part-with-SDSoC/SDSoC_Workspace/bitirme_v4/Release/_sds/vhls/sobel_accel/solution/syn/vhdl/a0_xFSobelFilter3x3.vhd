-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity a0_xFSobelFilter3x3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_mat_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_mat_V_V_empty_n : IN STD_LOGIC;
    p_src_mat_V_V_read : OUT STD_LOGIC;
    p_gradx_mat_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_gradx_mat_V_V_full_n : IN STD_LOGIC;
    p_gradx_mat_V_V_write : OUT STD_LOGIC;
    p_grady_mat_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_grady_mat_V_V_full_n : IN STD_LOGIC;
    p_grady_mat_V_V_write : OUT STD_LOGIC;
    p_src_mat_rows_read_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    p_src_mat_rows_read_empty_n : IN STD_LOGIC;
    p_src_mat_rows_read_read : OUT STD_LOGIC;
    p_src_mat_cols_read_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    p_src_mat_cols_read_empty_n : IN STD_LOGIC;
    p_src_mat_cols_read_read : OUT STD_LOGIC );
end;


architecture behav of a0_xFSobelFilter3x3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv13_2 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv13_3 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000011";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_src_mat_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_2_i_i_reg_717 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal tmp_12_i_i_reg_776 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_i_i_reg_768 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_gradx_mat_V_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp1_iter5 : STD_LOGIC := '0';
    signal tmp_15_i_i_reg_792 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_i_i_reg_792_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal p_grady_mat_V_V_blk_n : STD_LOGIC;
    signal p_src_mat_rows_read_blk_n : STD_LOGIC;
    signal p_src_mat_cols_read_blk_n : STD_LOGIC;
    signal p_1_i_i_reg_244 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_0177_0_i_i_i_reg_280 : STD_LOGIC_VECTOR (12 downto 0);
    signal src_buf3_V_0_i_i_reg_292 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf2_0_V_reg_304 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf2_V_0_i_i_reg_316 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf3_0_V_reg_329 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf1_0_V_reg_342 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf1_V_0_i_i_reg_354 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_fu_416_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1_reg_705 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal tmp_2_fu_420_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2_reg_711 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2_i_i_fu_428_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal col_V_fu_433_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal col_V_reg_721 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal op2_assign_fu_448_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal op2_assign_reg_744 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_7_i_i_fu_458_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal p_0455_3_i_i_fu_540_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_0455_3_i_i_reg_753 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_0449_3_i_i_fu_556_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_0449_3_i_i_reg_758 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_0443_3_i_i_fu_572_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_0443_3_i_i_reg_763 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_3_i_i_fu_580_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_585_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_3_reg_772 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_12_i_i_fu_608_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state6_pp1_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op105_read_state7 : BOOLEAN;
    signal ap_block_state7_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state8_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state9_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state10_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_state11_pp1_stage0_iter5 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal tmp_12_i_i_reg_776_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_i_i_reg_776_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_i_i_reg_776_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_V_1_fu_613_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal col_V_1_reg_780 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal tmp_11_i_i_fu_619_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_i_i_reg_785 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_i_i_fu_629_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_i_i_reg_792_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_i_i_reg_792_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal buf0_V_fu_635_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf0_V_reg_811 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal buf1_V_fu_647_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf1_V_reg_817 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf2_V_fu_659_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf2_V_reg_823 : STD_LOGIC_VECTOR (7 downto 0);
    signal GradientValuesX_0_V_reg_829 : STD_LOGIC_VECTOR (7 downto 0);
    signal GradientValuesY_0_V_reg_834 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_i_i_15_fu_691_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_i_i_15_reg_839 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal row_V_fu_699_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_V_reg_844 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_xFGradientX3x3_0_0_s_fu_384_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal GradientValuesX_0_V_2_reg_849 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal grp_xFGradientY3x3_0_0_s_fu_400_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal GradientValuesY_0_V_2_reg_854 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal ap_condition_pp1_exit_iter3_state9 : STD_LOGIC;
    signal buf_0_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_0_V_ce0 : STD_LOGIC;
    signal buf_0_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_0_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_0_V_ce1 : STD_LOGIC;
    signal buf_0_V_we1 : STD_LOGIC;
    signal buf_0_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_1_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_1_V_ce0 : STD_LOGIC;
    signal buf_1_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_1_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_1_V_ce1 : STD_LOGIC;
    signal buf_1_V_we1 : STD_LOGIC;
    signal buf_1_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_2_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_2_V_ce0 : STD_LOGIC;
    signal buf_2_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_2_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_2_V_ce1 : STD_LOGIC;
    signal buf_2_V_we1 : STD_LOGIC;
    signal buf_2_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_xFSobel3x3_1_0_0_s_fu_367_ap_return_0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_xFSobel3x3_1_0_0_s_fu_367_ap_return_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_xFSobel3x3_1_0_0_s_fu_367_ap_ce : STD_LOGIC;
    signal grp_xFGradientX3x3_0_0_s_fu_384_ap_ce : STD_LOGIC;
    signal grp_xFGradientY3x3_0_0_s_fu_400_ap_ce : STD_LOGIC;
    signal ap_phi_mux_p_1_i_i_phi_fu_248_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_2_i_i_reg_256 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_state14 : BOOLEAN;
    signal p_6_i_i_reg_268 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_mux_p_0177_0_i_i_i_phi_fu_284_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_mux_src_buf3_V_0_i_i_phi_fu_296_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_src_buf2_V_0_i_i_phi_fu_320_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_src_buf3_0_V_phi_fu_334_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_src_buf1_0_V_phi_fu_346_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_src_buf1_V_0_i_i_phi_fu_358_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_i_i_fu_439_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_0_V_addr_1_gep_fu_200_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_1_V_addr_1_gep_fu_206_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_2_V_addr_gep_fu_212_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal p_5_i_i_fu_96 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_4_i_i_fu_100 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_3_i_i_fu_104 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1_cast_i_i_fu_424_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_cast100_i_i_fu_445_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_6_cast_i_i_fu_454_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_i_i_fu_488_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_i_i_fu_476_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_i_i_fu_482_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_518_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_524_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_534_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_530_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_i_i_fu_494_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal sel_tmp4_fu_548_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_1_i_i_12_fu_502_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal sel_tmp8_fu_564_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_2_i_i_13_fu_510_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_6_cast99_i_i_fu_472_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_11_cast_i_i_fu_604_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal row_ind_V_fu_679_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_14_i_i_fu_685_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_condition_675 : BOOLEAN;
    signal ap_condition_679 : BOOLEAN;
    signal ap_condition_368 : BOOLEAN;

    component a0_xFSobel3x3_1_0_0_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        src_buf1_0_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        src_buf1_1_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        src_buf1_2_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        src_buf2_0_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        src_buf2_2_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        src_buf3_0_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        src_buf3_1_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        src_buf3_2_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component a0_xFGradientX3x3_0_0_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        t0_V : IN STD_LOGIC_VECTOR (7 downto 0);
        t2_V : IN STD_LOGIC_VECTOR (7 downto 0);
        m0_V : IN STD_LOGIC_VECTOR (7 downto 0);
        m2_V : IN STD_LOGIC_VECTOR (7 downto 0);
        b0_V : IN STD_LOGIC_VECTOR (7 downto 0);
        b2_V : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component a0_xFGradientY3x3_0_0_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        t0_V : IN STD_LOGIC_VECTOR (7 downto 0);
        t1_V : IN STD_LOGIC_VECTOR (7 downto 0);
        t2_V : IN STD_LOGIC_VECTOR (7 downto 0);
        b0_V : IN STD_LOGIC_VECTOR (7 downto 0);
        b1_V : IN STD_LOGIC_VECTOR (7 downto 0);
        b2_V : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component a0_sobel_accel_mux_3eOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component a0_xFSobelFilter3x3_bkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    buf_0_V_U : component a0_xFSobelFilter3x3_bkb
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_0_V_address0,
        ce0 => buf_0_V_ce0,
        q0 => buf_0_V_q0,
        address1 => buf_0_V_address1,
        ce1 => buf_0_V_ce1,
        we1 => buf_0_V_we1,
        d1 => buf_0_V_d1);

    buf_1_V_U : component a0_xFSobelFilter3x3_bkb
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_1_V_address0,
        ce0 => buf_1_V_ce0,
        q0 => buf_1_V_q0,
        address1 => buf_1_V_address1,
        ce1 => buf_1_V_ce1,
        we1 => buf_1_V_we1,
        d1 => buf_1_V_d1);

    buf_2_V_U : component a0_xFSobelFilter3x3_bkb
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_2_V_address0,
        ce0 => buf_2_V_ce0,
        q0 => buf_2_V_q0,
        address1 => buf_2_V_address1,
        ce1 => buf_2_V_ce1,
        we1 => buf_2_V_we1,
        d1 => buf_2_V_d1);

    grp_xFSobel3x3_1_0_0_s_fu_367 : component a0_xFSobel3x3_1_0_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        src_buf1_0_V_read => ap_phi_mux_src_buf1_V_0_i_i_phi_fu_358_p4,
        src_buf1_1_V_read => ap_phi_mux_src_buf1_0_V_phi_fu_346_p4,
        src_buf1_2_V_read => buf0_V_fu_635_p5,
        src_buf2_0_V_read => ap_phi_mux_src_buf2_V_0_i_i_phi_fu_320_p4,
        src_buf2_2_V_read => buf1_V_fu_647_p5,
        src_buf3_0_V_read => ap_phi_mux_src_buf3_V_0_i_i_phi_fu_296_p4,
        src_buf3_1_V_read => ap_phi_mux_src_buf3_0_V_phi_fu_334_p4,
        src_buf3_2_V_read => buf2_V_fu_659_p5,
        ap_return_0 => grp_xFSobel3x3_1_0_0_s_fu_367_ap_return_0,
        ap_return_1 => grp_xFSobel3x3_1_0_0_s_fu_367_ap_return_1,
        ap_ce => grp_xFSobel3x3_1_0_0_s_fu_367_ap_ce);

    grp_xFGradientX3x3_0_0_s_fu_384 : component a0_xFGradientX3x3_0_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        t0_V => src_buf1_V_0_i_i_reg_354,
        t2_V => ap_const_lv8_0,
        m0_V => src_buf2_V_0_i_i_reg_316,
        m2_V => ap_const_lv8_0,
        b0_V => src_buf3_V_0_i_i_reg_292,
        b2_V => ap_const_lv8_0,
        ap_return => grp_xFGradientX3x3_0_0_s_fu_384_ap_return,
        ap_ce => grp_xFGradientX3x3_0_0_s_fu_384_ap_ce);

    grp_xFGradientY3x3_0_0_s_fu_400 : component a0_xFGradientY3x3_0_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        t0_V => src_buf1_V_0_i_i_reg_354,
        t1_V => src_buf1_0_V_reg_342,
        t2_V => ap_const_lv8_0,
        b0_V => src_buf3_V_0_i_i_reg_292,
        b1_V => src_buf3_0_V_reg_329,
        b2_V => ap_const_lv8_0,
        ap_return => grp_xFGradientY3x3_0_0_s_fu_400_ap_return,
        ap_ce => grp_xFGradientY3x3_0_0_s_fu_400_ap_ce);

    sobel_accel_mux_3eOg_U33 : component a0_sobel_accel_mux_3eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => p_0455_3_i_i_reg_753,
        dout => buf0_V_fu_635_p5);

    sobel_accel_mux_3eOg_U34 : component a0_sobel_accel_mux_3eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => p_0449_3_i_i_reg_758,
        dout => buf1_V_fu_647_p5);

    sobel_accel_mux_3eOg_U35 : component a0_sobel_accel_mux_3eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => p_0443_3_i_i_reg_763,
        dout => buf2_V_fu_659_p5);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((tmp_7_i_i_fu_458_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((p_src_mat_cols_read_empty_n = ap_const_logic_0) or (p_src_mat_rows_read_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((not(((p_src_mat_cols_read_empty_n = ap_const_logic_0) or (p_src_mat_rows_read_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((tmp_12_i_i_fu_608_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((tmp_7_i_i_fu_458_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter3_state9)) then 
                        ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter2;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
                elsif (((tmp_7_i_i_fu_458_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                    ap_enable_reg_pp1_iter5 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    p_0177_0_i_i_i_reg_280_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_12_i_i_reg_776 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_0177_0_i_i_i_reg_280 <= col_V_1_reg_780;
            elsif (((tmp_7_i_i_fu_458_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                p_0177_0_i_i_i_reg_280 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    p_1_i_i_reg_244_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_2_i_i_reg_717 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_1_i_i_reg_244 <= col_V_reg_721;
            elsif ((not(((p_src_mat_cols_read_empty_n = ap_const_logic_0) or (p_src_mat_rows_read_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_1_i_i_reg_244 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    p_2_i_i_reg_256_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((p_grady_mat_V_V_full_n = ap_const_logic_0) or (p_gradx_mat_V_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                p_2_i_i_reg_256 <= p_i_i_15_reg_839;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                p_2_i_i_reg_256 <= ap_const_lv13_2;
            end if; 
        end if;
    end process;

    p_6_i_i_reg_268_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((p_grady_mat_V_V_full_n = ap_const_logic_0) or (p_gradx_mat_V_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                p_6_i_i_reg_268 <= row_V_reg_844;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                p_6_i_i_reg_268 <= ap_const_lv13_1;
            end if; 
        end if;
    end process;

    src_buf1_0_V_reg_342_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_12_i_i_reg_776_pp1_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf1_0_V_reg_342 <= buf0_V_reg_811;
            elsif (((tmp_7_i_i_fu_458_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                src_buf1_0_V_reg_342 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf1_V_0_i_i_reg_354_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_12_i_i_reg_776_pp1_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf1_V_0_i_i_reg_354 <= src_buf1_0_V_reg_342;
            elsif (((tmp_7_i_i_fu_458_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                src_buf1_V_0_i_i_reg_354 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf2_0_V_reg_304_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_12_i_i_reg_776_pp1_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf2_0_V_reg_304 <= buf1_V_reg_817;
            elsif (((tmp_7_i_i_fu_458_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                src_buf2_0_V_reg_304 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf2_V_0_i_i_reg_316_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_12_i_i_reg_776_pp1_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf2_V_0_i_i_reg_316 <= src_buf2_0_V_reg_304;
            elsif (((tmp_7_i_i_fu_458_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                src_buf2_V_0_i_i_reg_316 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf3_0_V_reg_329_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_12_i_i_reg_776_pp1_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf3_0_V_reg_329 <= buf2_V_reg_823;
            elsif (((tmp_7_i_i_fu_458_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                src_buf3_0_V_reg_329 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf3_V_0_i_i_reg_292_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_12_i_i_reg_776_pp1_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf3_V_0_i_i_reg_292 <= src_buf3_0_V_reg_329;
            elsif (((tmp_7_i_i_fu_458_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                src_buf3_V_0_i_i_reg_292 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                GradientValuesX_0_V_2_reg_849 <= grp_xFGradientX3x3_0_0_s_fu_384_ap_return;
                GradientValuesY_0_V_2_reg_854 <= grp_xFGradientY3x3_0_0_s_fu_400_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_12_i_i_reg_776_pp1_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                GradientValuesX_0_V_reg_829 <= grp_xFSobel3x3_1_0_0_s_fu_367_ap_return_0;
                GradientValuesY_0_V_reg_834 <= grp_xFSobel3x3_1_0_0_s_fu_367_ap_return_1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_12_i_i_reg_776_pp1_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                buf0_V_reg_811 <= buf0_V_fu_635_p5;
                buf1_V_reg_817 <= buf1_V_fu_647_p5;
                buf2_V_reg_823 <= buf2_V_fu_659_p5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                col_V_1_reg_780 <= col_V_1_fu_613_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                col_V_reg_721 <= col_V_fu_433_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                op2_assign_reg_744 <= op2_assign_fu_448_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_7_i_i_fu_458_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                p_0443_3_i_i_reg_763 <= p_0443_3_i_i_fu_572_p3;
                p_0449_3_i_i_reg_758 <= p_0449_3_i_i_fu_556_p3;
                p_0455_3_i_i_reg_753 <= p_0455_3_i_i_fu_540_p3;
                p_3_i_i_fu_104 <= p_0455_3_i_i_fu_540_p3;
                p_4_i_i_fu_100 <= p_0449_3_i_i_fu_556_p3;
                p_5_i_i_fu_96 <= p_0443_3_i_i_fu_572_p3;
                tmp_3_i_i_reg_768 <= tmp_3_i_i_fu_580_p2;
                tmp_3_reg_772 <= tmp_3_fu_585_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                p_i_i_15_reg_839 <= p_i_i_15_fu_691_p3;
                row_V_reg_844 <= row_V_fu_699_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_12_i_i_reg_776 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                    tmp_11_i_i_reg_785(12 downto 0) <= tmp_11_i_i_fu_619_p1(12 downto 0);
                tmp_15_i_i_reg_792 <= tmp_15_i_i_fu_629_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                tmp_12_i_i_reg_776 <= tmp_12_i_i_fu_608_p2;
                tmp_12_i_i_reg_776_pp1_iter1_reg <= tmp_12_i_i_reg_776;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                tmp_12_i_i_reg_776_pp1_iter2_reg <= tmp_12_i_i_reg_776_pp1_iter1_reg;
                tmp_12_i_i_reg_776_pp1_iter3_reg <= tmp_12_i_i_reg_776_pp1_iter2_reg;
                tmp_15_i_i_reg_792_pp1_iter2_reg <= tmp_15_i_i_reg_792;
                tmp_15_i_i_reg_792_pp1_iter3_reg <= tmp_15_i_i_reg_792_pp1_iter2_reg;
                tmp_15_i_i_reg_792_pp1_iter4_reg <= tmp_15_i_i_reg_792_pp1_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((p_src_mat_cols_read_empty_n = ap_const_logic_0) or (p_src_mat_rows_read_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                tmp_1_reg_705 <= tmp_1_fu_416_p1;
                tmp_2_reg_711 <= tmp_2_fu_420_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_2_i_i_reg_717 <= tmp_2_i_i_fu_428_p2;
            end if;
        end if;
    end process;
    tmp_11_i_i_reg_785(31 downto 13) <= "0000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, p_gradx_mat_V_V_full_n, p_grady_mat_V_V_full_n, p_src_mat_rows_read_empty_n, p_src_mat_cols_read_empty_n, ap_enable_reg_pp1_iter5, ap_CS_fsm_state14, tmp_2_i_i_fu_428_p2, ap_enable_reg_pp0_iter0, tmp_7_i_i_fu_458_p2, ap_CS_fsm_state5, ap_enable_reg_pp1_iter3, ap_block_pp0_stage0_subdone, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((p_src_mat_cols_read_empty_n = ap_const_logic_0) or (p_src_mat_rows_read_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((tmp_2_i_i_fu_428_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((tmp_2_i_i_fu_428_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((tmp_7_i_i_fu_458_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) and not(((ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if ((not(((p_grady_mat_V_V_full_n = ap_const_logic_0) or (p_gradx_mat_V_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state12 <= ap_CS_fsm(5);
    ap_CS_fsm_state13 <= ap_CS_fsm(6);
    ap_CS_fsm_state14 <= ap_CS_fsm(7);
    ap_CS_fsm_state4 <= ap_CS_fsm(2);
    ap_CS_fsm_state5 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(p_src_mat_V_V_empty_n, ap_enable_reg_pp0_iter1, tmp_2_i_i_reg_717)
    begin
                ap_block_pp0_stage0_11001 <= ((tmp_2_i_i_reg_717 = ap_const_lv1_1) and (p_src_mat_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_mat_V_V_empty_n, ap_enable_reg_pp0_iter1, tmp_2_i_i_reg_717)
    begin
                ap_block_pp0_stage0_subdone <= ((tmp_2_i_i_reg_717 = ap_const_lv1_1) and (p_src_mat_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(p_src_mat_V_V_empty_n, p_gradx_mat_V_V_full_n, p_grady_mat_V_V_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter5, tmp_15_i_i_reg_792_pp1_iter4_reg, ap_predicate_op105_read_state7)
    begin
                ap_block_pp1_stage0_01001 <= (((ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (((tmp_15_i_i_reg_792_pp1_iter4_reg = ap_const_lv1_0) and (p_grady_mat_V_V_full_n = ap_const_logic_0)) or ((tmp_15_i_i_reg_792_pp1_iter4_reg = ap_const_lv1_0) and (p_gradx_mat_V_V_full_n = ap_const_logic_0)))) or ((p_src_mat_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op105_read_state7 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(p_src_mat_V_V_empty_n, p_gradx_mat_V_V_full_n, p_grady_mat_V_V_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter5, tmp_15_i_i_reg_792_pp1_iter4_reg, ap_predicate_op105_read_state7)
    begin
                ap_block_pp1_stage0_11001 <= (((ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (((tmp_15_i_i_reg_792_pp1_iter4_reg = ap_const_lv1_0) and (p_grady_mat_V_V_full_n = ap_const_logic_0)) or ((tmp_15_i_i_reg_792_pp1_iter4_reg = ap_const_lv1_0) and (p_gradx_mat_V_V_full_n = ap_const_logic_0)))) or ((p_src_mat_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op105_read_state7 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(p_src_mat_V_V_empty_n, p_gradx_mat_V_V_full_n, p_grady_mat_V_V_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter5, tmp_15_i_i_reg_792_pp1_iter4_reg, ap_predicate_op105_read_state7)
    begin
                ap_block_pp1_stage0_subdone <= (((ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (((tmp_15_i_i_reg_792_pp1_iter4_reg = ap_const_lv1_0) and (p_grady_mat_V_V_full_n = ap_const_logic_0)) or ((tmp_15_i_i_reg_792_pp1_iter4_reg = ap_const_lv1_0) and (p_gradx_mat_V_V_full_n = ap_const_logic_0)))) or ((p_src_mat_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op105_read_state7 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, p_src_mat_rows_read_empty_n, p_src_mat_cols_read_empty_n)
    begin
                ap_block_state1 <= ((p_src_mat_cols_read_empty_n = ap_const_logic_0) or (p_src_mat_rows_read_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp1_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state11_pp1_stage0_iter5_assign_proc : process(p_gradx_mat_V_V_full_n, p_grady_mat_V_V_full_n, tmp_15_i_i_reg_792_pp1_iter4_reg)
    begin
                ap_block_state11_pp1_stage0_iter5 <= (((tmp_15_i_i_reg_792_pp1_iter4_reg = ap_const_lv1_0) and (p_grady_mat_V_V_full_n = ap_const_logic_0)) or ((tmp_15_i_i_reg_792_pp1_iter4_reg = ap_const_lv1_0) and (p_gradx_mat_V_V_full_n = ap_const_logic_0)));
    end process;


    ap_block_state14_assign_proc : process(p_gradx_mat_V_V_full_n, p_grady_mat_V_V_full_n)
    begin
                ap_block_state14 <= ((p_grady_mat_V_V_full_n = ap_const_logic_0) or (p_gradx_mat_V_V_full_n = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(p_src_mat_V_V_empty_n, tmp_2_i_i_reg_717)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((tmp_2_i_i_reg_717 = ap_const_lv1_1) and (p_src_mat_V_V_empty_n = ap_const_logic_0));
    end process;

        ap_block_state6_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_pp1_stage0_iter1_assign_proc : process(p_src_mat_V_V_empty_n, ap_predicate_op105_read_state7)
    begin
                ap_block_state7_pp1_stage0_iter1 <= ((p_src_mat_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op105_read_state7 = ap_const_boolean_1));
    end process;

        ap_block_state8_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_368_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, tmp_12_i_i_reg_776)
    begin
                ap_condition_368 <= ((ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_12_i_i_reg_776 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0));
    end process;


    ap_condition_675_assign_proc : process(tmp_3_i_i_reg_768, p_0443_3_i_i_reg_763)
    begin
                ap_condition_675 <= (not((p_0443_3_i_i_reg_763 = ap_const_lv2_1)) and not((p_0443_3_i_i_reg_763 = ap_const_lv2_0)) and (tmp_3_i_i_reg_768 = ap_const_lv1_0));
    end process;


    ap_condition_679_assign_proc : process(tmp_3_i_i_reg_768, tmp_3_reg_772)
    begin
                ap_condition_679 <= (not((tmp_3_reg_772 = ap_const_lv2_1)) and not((tmp_3_reg_772 = ap_const_lv2_0)) and (tmp_3_i_i_reg_768 = ap_const_lv1_1));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(tmp_2_i_i_fu_428_p2)
    begin
        if ((tmp_2_i_i_fu_428_p2 = ap_const_lv1_0)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter3_state9_assign_proc : process(ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            ap_condition_pp1_exit_iter3_state9 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter3_state9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, tmp_7_i_i_fu_458_p2, ap_CS_fsm_state5)
    begin
        if (((tmp_7_i_i_fu_458_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter5, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter4)
    begin
        if (((ap_enable_reg_pp1_iter5 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_p_0177_0_i_i_i_phi_fu_284_p4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, tmp_12_i_i_reg_776, p_0177_0_i_i_i_reg_280, col_V_1_reg_780)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_12_i_i_reg_776 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_p_0177_0_i_i_i_phi_fu_284_p4 <= col_V_1_reg_780;
        else 
            ap_phi_mux_p_0177_0_i_i_i_phi_fu_284_p4 <= p_0177_0_i_i_i_reg_280;
        end if; 
    end process;


    ap_phi_mux_p_1_i_i_phi_fu_248_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_2_i_i_reg_717, p_1_i_i_reg_244, col_V_reg_721)
    begin
        if (((tmp_2_i_i_reg_717 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_p_1_i_i_phi_fu_248_p4 <= col_V_reg_721;
        else 
            ap_phi_mux_p_1_i_i_phi_fu_248_p4 <= p_1_i_i_reg_244;
        end if; 
    end process;


    ap_phi_mux_src_buf1_0_V_phi_fu_346_p4_assign_proc : process(ap_block_pp1_stage0, src_buf1_0_V_reg_342, tmp_12_i_i_reg_776_pp1_iter3_reg, buf0_V_reg_811, ap_enable_reg_pp1_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_12_i_i_reg_776_pp1_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
            ap_phi_mux_src_buf1_0_V_phi_fu_346_p4 <= buf0_V_reg_811;
        else 
            ap_phi_mux_src_buf1_0_V_phi_fu_346_p4 <= src_buf1_0_V_reg_342;
        end if; 
    end process;


    ap_phi_mux_src_buf1_V_0_i_i_phi_fu_358_p4_assign_proc : process(ap_block_pp1_stage0, src_buf1_0_V_reg_342, src_buf1_V_0_i_i_reg_354, tmp_12_i_i_reg_776_pp1_iter3_reg, ap_enable_reg_pp1_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_12_i_i_reg_776_pp1_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
            ap_phi_mux_src_buf1_V_0_i_i_phi_fu_358_p4 <= src_buf1_0_V_reg_342;
        else 
            ap_phi_mux_src_buf1_V_0_i_i_phi_fu_358_p4 <= src_buf1_V_0_i_i_reg_354;
        end if; 
    end process;


    ap_phi_mux_src_buf2_V_0_i_i_phi_fu_320_p4_assign_proc : process(ap_block_pp1_stage0, src_buf2_0_V_reg_304, src_buf2_V_0_i_i_reg_316, tmp_12_i_i_reg_776_pp1_iter3_reg, ap_enable_reg_pp1_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_12_i_i_reg_776_pp1_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
            ap_phi_mux_src_buf2_V_0_i_i_phi_fu_320_p4 <= src_buf2_0_V_reg_304;
        else 
            ap_phi_mux_src_buf2_V_0_i_i_phi_fu_320_p4 <= src_buf2_V_0_i_i_reg_316;
        end if; 
    end process;


    ap_phi_mux_src_buf3_0_V_phi_fu_334_p4_assign_proc : process(ap_block_pp1_stage0, src_buf3_0_V_reg_329, tmp_12_i_i_reg_776_pp1_iter3_reg, buf2_V_reg_823, ap_enable_reg_pp1_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_12_i_i_reg_776_pp1_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
            ap_phi_mux_src_buf3_0_V_phi_fu_334_p4 <= buf2_V_reg_823;
        else 
            ap_phi_mux_src_buf3_0_V_phi_fu_334_p4 <= src_buf3_0_V_reg_329;
        end if; 
    end process;


    ap_phi_mux_src_buf3_V_0_i_i_phi_fu_296_p4_assign_proc : process(ap_block_pp1_stage0, src_buf3_V_0_i_i_reg_292, src_buf3_0_V_reg_329, tmp_12_i_i_reg_776_pp1_iter3_reg, ap_enable_reg_pp1_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_12_i_i_reg_776_pp1_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
            ap_phi_mux_src_buf3_V_0_i_i_phi_fu_296_p4 <= src_buf3_0_V_reg_329;
        else 
            ap_phi_mux_src_buf3_V_0_i_i_phi_fu_296_p4 <= src_buf3_V_0_i_i_reg_292;
        end if; 
    end process;


    ap_predicate_op105_read_state7_assign_proc : process(tmp_12_i_i_reg_776, tmp_3_i_i_reg_768)
    begin
                ap_predicate_op105_read_state7 <= ((tmp_3_i_i_reg_768 = ap_const_lv1_1) and (tmp_12_i_i_reg_776 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(tmp_7_i_i_fu_458_p2, ap_CS_fsm_state5)
    begin
        if (((tmp_7_i_i_fu_458_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    buf_0_V_addr_1_gep_fu_200_p3 <= tmp_11_i_i_fu_619_p1(10 - 1 downto 0);
    buf_0_V_address0 <= tmp_11_i_i_reg_785(10 - 1 downto 0);

    buf_0_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, tmp_12_i_i_reg_776, tmp_3_i_i_reg_768, p_0443_3_i_i_reg_763, tmp_3_reg_772, tmp_11_i_i_fu_619_p1, tmp_1_i_i_fu_439_p1, buf_0_V_addr_1_gep_fu_200_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_3_i_i_reg_768 = ap_const_lv1_1) and (tmp_12_i_i_reg_776 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (tmp_3_reg_772 = ap_const_lv2_0))) then 
            buf_0_V_address1 <= buf_0_V_addr_1_gep_fu_200_p3;
        elsif (((tmp_3_i_i_reg_768 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_12_i_i_reg_776 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (p_0443_3_i_i_reg_763 = ap_const_lv2_0))) then 
            buf_0_V_address1 <= tmp_11_i_i_fu_619_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            buf_0_V_address1 <= tmp_1_i_i_fu_439_p1(10 - 1 downto 0);
        else 
            buf_0_V_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    buf_0_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            buf_0_V_ce0 <= ap_const_logic_1;
        else 
            buf_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, tmp_12_i_i_reg_776, tmp_3_i_i_reg_768, ap_block_pp0_stage0_11001, p_0443_3_i_i_reg_763, tmp_3_reg_772, ap_block_pp1_stage0_11001)
    begin
        if ((((tmp_3_i_i_reg_768 = ap_const_lv1_1) and (tmp_12_i_i_reg_776 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (tmp_3_reg_772 = ap_const_lv2_0)) or ((tmp_3_i_i_reg_768 = ap_const_lv1_0) and (tmp_12_i_i_reg_776 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (p_0443_3_i_i_reg_763 = ap_const_lv2_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            buf_0_V_ce1 <= ap_const_logic_1;
        else 
            buf_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_V_d1_assign_proc : process(p_src_mat_V_V_dout, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, tmp_12_i_i_reg_776, tmp_3_i_i_reg_768, p_0443_3_i_i_reg_763, tmp_3_reg_772)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_3_i_i_reg_768 = ap_const_lv1_1) and (tmp_12_i_i_reg_776 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (tmp_3_reg_772 = ap_const_lv2_0))) then 
            buf_0_V_d1 <= p_src_mat_V_V_dout;
        elsif ((((tmp_3_i_i_reg_768 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_12_i_i_reg_776 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (p_0443_3_i_i_reg_763 = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            buf_0_V_d1 <= ap_const_lv8_0;
        else 
            buf_0_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_0_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_2_i_i_reg_717, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, tmp_12_i_i_reg_776, tmp_3_i_i_reg_768, ap_block_pp0_stage0_11001, p_0443_3_i_i_reg_763, tmp_3_reg_772, ap_block_pp1_stage0_11001)
    begin
        if ((((tmp_3_i_i_reg_768 = ap_const_lv1_1) and (tmp_12_i_i_reg_776 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (tmp_3_reg_772 = ap_const_lv2_0)) or ((tmp_3_i_i_reg_768 = ap_const_lv1_0) and (tmp_12_i_i_reg_776 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (p_0443_3_i_i_reg_763 = ap_const_lv2_0)) or ((tmp_2_i_i_reg_717 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            buf_0_V_we1 <= ap_const_logic_1;
        else 
            buf_0_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_1_V_addr_1_gep_fu_206_p3 <= tmp_11_i_i_fu_619_p1(10 - 1 downto 0);
    buf_1_V_address0 <= tmp_11_i_i_reg_785(10 - 1 downto 0);

    buf_1_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, tmp_12_i_i_reg_776, tmp_3_i_i_reg_768, p_0443_3_i_i_reg_763, tmp_3_reg_772, tmp_11_i_i_fu_619_p1, tmp_1_i_i_fu_439_p1, buf_1_V_addr_1_gep_fu_206_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_3_i_i_reg_768 = ap_const_lv1_1) and (tmp_12_i_i_reg_776 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (tmp_3_reg_772 = ap_const_lv2_1))) then 
            buf_1_V_address1 <= buf_1_V_addr_1_gep_fu_206_p3;
        elsif (((tmp_3_i_i_reg_768 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_12_i_i_reg_776 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (p_0443_3_i_i_reg_763 = ap_const_lv2_1))) then 
            buf_1_V_address1 <= tmp_11_i_i_fu_619_p1(10 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            buf_1_V_address1 <= tmp_1_i_i_fu_439_p1(10 - 1 downto 0);
        else 
            buf_1_V_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    buf_1_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            buf_1_V_ce0 <= ap_const_logic_1;
        else 
            buf_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, tmp_12_i_i_reg_776, tmp_3_i_i_reg_768, ap_block_pp0_stage0_11001, p_0443_3_i_i_reg_763, tmp_3_reg_772, ap_block_pp1_stage0_11001)
    begin
        if ((((tmp_3_i_i_reg_768 = ap_const_lv1_1) and (tmp_12_i_i_reg_776 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (tmp_3_reg_772 = ap_const_lv2_1)) or ((tmp_3_i_i_reg_768 = ap_const_lv1_0) and (tmp_12_i_i_reg_776 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (p_0443_3_i_i_reg_763 = ap_const_lv2_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            buf_1_V_ce1 <= ap_const_logic_1;
        else 
            buf_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_V_d1_assign_proc : process(p_src_mat_V_V_dout, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, tmp_12_i_i_reg_776, tmp_3_i_i_reg_768, p_0443_3_i_i_reg_763, tmp_3_reg_772)
    begin
        if (((tmp_3_i_i_reg_768 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_12_i_i_reg_776 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (p_0443_3_i_i_reg_763 = ap_const_lv2_1))) then 
            buf_1_V_d1 <= ap_const_lv8_0;
        elsif ((((ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_3_i_i_reg_768 = ap_const_lv1_1) and (tmp_12_i_i_reg_776 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (tmp_3_reg_772 = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            buf_1_V_d1 <= p_src_mat_V_V_dout;
        else 
            buf_1_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_1_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_2_i_i_reg_717, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, tmp_12_i_i_reg_776, tmp_3_i_i_reg_768, ap_block_pp0_stage0_11001, p_0443_3_i_i_reg_763, tmp_3_reg_772, ap_block_pp1_stage0_11001)
    begin
        if ((((tmp_3_i_i_reg_768 = ap_const_lv1_1) and (tmp_12_i_i_reg_776 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (tmp_3_reg_772 = ap_const_lv2_1)) or ((tmp_3_i_i_reg_768 = ap_const_lv1_0) and (tmp_12_i_i_reg_776 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (p_0443_3_i_i_reg_763 = ap_const_lv2_1)) or ((tmp_2_i_i_reg_717 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            buf_1_V_we1 <= ap_const_logic_1;
        else 
            buf_1_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_2_V_addr_gep_fu_212_p3 <= tmp_11_i_i_fu_619_p1(10 - 1 downto 0);
    buf_2_V_address0 <= tmp_11_i_i_reg_785(10 - 1 downto 0);

    buf_2_V_address1_assign_proc : process(tmp_11_i_i_fu_619_p1, buf_2_V_addr_gep_fu_212_p3, ap_condition_675, ap_condition_679, ap_condition_368)
    begin
        if ((ap_const_boolean_1 = ap_condition_368)) then
            if ((ap_const_boolean_1 = ap_condition_679)) then 
                buf_2_V_address1 <= buf_2_V_addr_gep_fu_212_p3;
            elsif ((ap_const_boolean_1 = ap_condition_675)) then 
                buf_2_V_address1 <= tmp_11_i_i_fu_619_p1(10 - 1 downto 0);
            else 
                buf_2_V_address1 <= "XXXXXXXXXX";
            end if;
        else 
            buf_2_V_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    buf_2_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            buf_2_V_ce0 <= ap_const_logic_1;
        else 
            buf_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_V_ce1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, tmp_12_i_i_reg_776, tmp_3_i_i_reg_768, p_0443_3_i_i_reg_763, tmp_3_reg_772, ap_block_pp1_stage0_11001)
    begin
        if (((not((tmp_3_reg_772 = ap_const_lv2_1)) and not((tmp_3_reg_772 = ap_const_lv2_0)) and (tmp_3_i_i_reg_768 = ap_const_lv1_1) and (tmp_12_i_i_reg_776 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or (not((p_0443_3_i_i_reg_763 = ap_const_lv2_1)) and not((p_0443_3_i_i_reg_763 = ap_const_lv2_0)) and (tmp_3_i_i_reg_768 = ap_const_lv1_0) and (tmp_12_i_i_reg_776 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            buf_2_V_ce1 <= ap_const_logic_1;
        else 
            buf_2_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_V_d1_assign_proc : process(p_src_mat_V_V_dout, ap_condition_675, ap_condition_679, ap_condition_368)
    begin
        if ((ap_const_boolean_1 = ap_condition_368)) then
            if ((ap_const_boolean_1 = ap_condition_679)) then 
                buf_2_V_d1 <= p_src_mat_V_V_dout;
            elsif ((ap_const_boolean_1 = ap_condition_675)) then 
                buf_2_V_d1 <= ap_const_lv8_0;
            else 
                buf_2_V_d1 <= "XXXXXXXX";
            end if;
        else 
            buf_2_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_2_V_we1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, tmp_12_i_i_reg_776, tmp_3_i_i_reg_768, p_0443_3_i_i_reg_763, tmp_3_reg_772, ap_block_pp1_stage0_11001)
    begin
        if (((not((tmp_3_reg_772 = ap_const_lv2_1)) and not((tmp_3_reg_772 = ap_const_lv2_0)) and (tmp_3_i_i_reg_768 = ap_const_lv1_1) and (tmp_12_i_i_reg_776 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or (not((p_0443_3_i_i_reg_763 = ap_const_lv2_1)) and not((p_0443_3_i_i_reg_763 = ap_const_lv2_0)) and (tmp_3_i_i_reg_768 = ap_const_lv1_0) and (tmp_12_i_i_reg_776 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            buf_2_V_we1 <= ap_const_logic_1;
        else 
            buf_2_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    col_V_1_fu_613_p2 <= std_logic_vector(unsigned(ap_phi_mux_p_0177_0_i_i_i_phi_fu_284_p4) + unsigned(ap_const_lv13_1));
    col_V_fu_433_p2 <= std_logic_vector(unsigned(ap_phi_mux_p_1_i_i_phi_fu_248_p4) + unsigned(ap_const_lv13_1));

    grp_xFGradientX3x3_0_0_s_fu_384_ap_ce_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            grp_xFGradientX3x3_0_0_s_fu_384_ap_ce <= ap_const_logic_1;
        else 
            grp_xFGradientX3x3_0_0_s_fu_384_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_xFGradientY3x3_0_0_s_fu_400_ap_ce_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            grp_xFGradientY3x3_0_0_s_fu_400_ap_ce <= ap_const_logic_1;
        else 
            grp_xFGradientY3x3_0_0_s_fu_400_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_xFSobel3x3_1_0_0_s_fu_367_ap_ce_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            grp_xFSobel3x3_1_0_0_s_fu_367_ap_ce <= ap_const_logic_1;
        else 
            grp_xFSobel3x3_1_0_0_s_fu_367_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    op2_assign_fu_448_p2 <= std_logic_vector(unsigned(tmp_5_cast100_i_i_fu_445_p1) + unsigned(ap_const_lv17_1));
    p_0443_3_i_i_fu_572_p3 <= 
        sel_tmp8_fu_564_p3 when (tmp_fu_534_p2(0) = '1') else 
        p_2_i_i_13_fu_510_p3;
    p_0449_3_i_i_fu_556_p3 <= 
        sel_tmp4_fu_548_p3 when (tmp_fu_534_p2(0) = '1') else 
        p_1_i_i_12_fu_502_p3;
    p_0455_3_i_i_fu_540_p3 <= 
        sel_tmp_fu_530_p1 when (tmp_fu_534_p2(0) = '1') else 
        p_i_i_fu_494_p3;
    p_1_i_i_12_fu_502_p3 <= 
        ap_const_lv2_0 when (tmp_i_i_fu_488_p2(0) = '1') else 
        p_4_i_i_fu_100;
    p_2_i_i_13_fu_510_p3 <= 
        ap_const_lv2_1 when (tmp_i_i_fu_488_p2(0) = '1') else 
        p_5_i_i_fu_96;

    p_gradx_mat_V_V_blk_n_assign_proc : process(p_gradx_mat_V_V_full_n, ap_block_pp1_stage0, ap_enable_reg_pp1_iter5, tmp_15_i_i_reg_792_pp1_iter4_reg, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or ((tmp_15_i_i_reg_792_pp1_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1)))) then 
            p_gradx_mat_V_V_blk_n <= p_gradx_mat_V_V_full_n;
        else 
            p_gradx_mat_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_gradx_mat_V_V_din_assign_proc : process(p_gradx_mat_V_V_full_n, p_grady_mat_V_V_full_n, ap_enable_reg_pp1_iter5, tmp_15_i_i_reg_792_pp1_iter4_reg, ap_CS_fsm_state14, GradientValuesX_0_V_reg_829, GradientValuesX_0_V_2_reg_849, ap_block_pp1_stage0_01001)
    begin
        if ((not(((p_grady_mat_V_V_full_n = ap_const_logic_0) or (p_gradx_mat_V_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            p_gradx_mat_V_V_din <= GradientValuesX_0_V_2_reg_849;
        elsif (((tmp_15_i_i_reg_792_pp1_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_01001) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1))) then 
            p_gradx_mat_V_V_din <= GradientValuesX_0_V_reg_829;
        else 
            p_gradx_mat_V_V_din <= "XXXXXXXX";
        end if; 
    end process;


    p_gradx_mat_V_V_write_assign_proc : process(p_gradx_mat_V_V_full_n, p_grady_mat_V_V_full_n, ap_enable_reg_pp1_iter5, tmp_15_i_i_reg_792_pp1_iter4_reg, ap_CS_fsm_state14, ap_block_pp1_stage0_11001)
    begin
        if ((((tmp_15_i_i_reg_792_pp1_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or (not(((p_grady_mat_V_V_full_n = ap_const_logic_0) or (p_gradx_mat_V_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state14)))) then 
            p_gradx_mat_V_V_write <= ap_const_logic_1;
        else 
            p_gradx_mat_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    p_grady_mat_V_V_blk_n_assign_proc : process(p_grady_mat_V_V_full_n, ap_block_pp1_stage0, ap_enable_reg_pp1_iter5, tmp_15_i_i_reg_792_pp1_iter4_reg, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or ((tmp_15_i_i_reg_792_pp1_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1)))) then 
            p_grady_mat_V_V_blk_n <= p_grady_mat_V_V_full_n;
        else 
            p_grady_mat_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_grady_mat_V_V_din_assign_proc : process(p_gradx_mat_V_V_full_n, p_grady_mat_V_V_full_n, ap_enable_reg_pp1_iter5, tmp_15_i_i_reg_792_pp1_iter4_reg, ap_CS_fsm_state14, GradientValuesY_0_V_reg_834, GradientValuesY_0_V_2_reg_854, ap_block_pp1_stage0_01001)
    begin
        if ((not(((p_grady_mat_V_V_full_n = ap_const_logic_0) or (p_gradx_mat_V_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            p_grady_mat_V_V_din <= GradientValuesY_0_V_2_reg_854;
        elsif (((tmp_15_i_i_reg_792_pp1_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_01001) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1))) then 
            p_grady_mat_V_V_din <= GradientValuesY_0_V_reg_834;
        else 
            p_grady_mat_V_V_din <= "XXXXXXXX";
        end if; 
    end process;


    p_grady_mat_V_V_write_assign_proc : process(p_gradx_mat_V_V_full_n, p_grady_mat_V_V_full_n, ap_enable_reg_pp1_iter5, tmp_15_i_i_reg_792_pp1_iter4_reg, ap_CS_fsm_state14, ap_block_pp1_stage0_11001)
    begin
        if ((((tmp_15_i_i_reg_792_pp1_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or (not(((p_grady_mat_V_V_full_n = ap_const_logic_0) or (p_gradx_mat_V_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state14)))) then 
            p_grady_mat_V_V_write <= ap_const_logic_1;
        else 
            p_grady_mat_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_i_i_15_fu_691_p3 <= 
        ap_const_lv13_0 when (tmp_14_i_i_fu_685_p2(0) = '1') else 
        row_ind_V_fu_679_p2;
    p_i_i_fu_494_p3 <= 
        ap_const_lv2_2 when (tmp_i_i_fu_488_p2(0) = '1') else 
        p_3_i_i_fu_104;

    p_src_mat_V_V_blk_n_assign_proc : process(p_src_mat_V_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_2_i_i_reg_717, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, tmp_12_i_i_reg_776, tmp_3_i_i_reg_768)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0) and (tmp_3_i_i_reg_768 = ap_const_lv1_1) and (tmp_12_i_i_reg_776 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((tmp_2_i_i_reg_717 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            p_src_mat_V_V_blk_n <= p_src_mat_V_V_empty_n;
        else 
            p_src_mat_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_mat_V_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_2_i_i_reg_717, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp0_stage0_11001, ap_predicate_op105_read_state7, ap_block_pp1_stage0_11001)
    begin
        if ((((ap_predicate_op105_read_state7 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((tmp_2_i_i_reg_717 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            p_src_mat_V_V_read <= ap_const_logic_1;
        else 
            p_src_mat_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    p_src_mat_cols_read_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_src_mat_cols_read_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_src_mat_cols_read_blk_n <= p_src_mat_cols_read_empty_n;
        else 
            p_src_mat_cols_read_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_mat_cols_read_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_src_mat_rows_read_empty_n, p_src_mat_cols_read_empty_n)
    begin
        if ((not(((p_src_mat_cols_read_empty_n = ap_const_logic_0) or (p_src_mat_rows_read_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_src_mat_cols_read_read <= ap_const_logic_1;
        else 
            p_src_mat_cols_read_read <= ap_const_logic_0;
        end if; 
    end process;


    p_src_mat_rows_read_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_src_mat_rows_read_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_src_mat_rows_read_blk_n <= p_src_mat_rows_read_empty_n;
        else 
            p_src_mat_rows_read_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_mat_rows_read_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_src_mat_rows_read_empty_n, p_src_mat_cols_read_empty_n)
    begin
        if ((not(((p_src_mat_cols_read_empty_n = ap_const_logic_0) or (p_src_mat_rows_read_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_src_mat_rows_read_read <= ap_const_logic_1;
        else 
            p_src_mat_rows_read_read <= ap_const_logic_0;
        end if; 
    end process;

    row_V_fu_699_p2 <= std_logic_vector(unsigned(p_6_i_i_reg_268) + unsigned(ap_const_lv13_1));
    row_ind_V_fu_679_p2 <= std_logic_vector(unsigned(p_2_i_i_reg_256) + unsigned(ap_const_lv13_1));
    sel_tmp1_fu_518_p2 <= (tmp_8_i_i_fu_476_p2 xor ap_const_lv1_1);
    sel_tmp2_fu_524_p2 <= (tmp_9_i_i_fu_482_p2 and sel_tmp1_fu_518_p2);
    sel_tmp4_fu_548_p3 <= 
        ap_const_lv2_2 when (sel_tmp2_fu_524_p2(0) = '1') else 
        ap_const_lv2_1;
    sel_tmp8_fu_564_p3 <= 
        ap_const_lv2_0 when (sel_tmp2_fu_524_p2(0) = '1') else 
        ap_const_lv2_2;
    sel_tmp_fu_530_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sel_tmp2_fu_524_p2),2));
    tmp_11_cast_i_i_fu_604_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_p_0177_0_i_i_i_phi_fu_284_p4),16));
    tmp_11_i_i_fu_619_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0177_0_i_i_i_reg_280),32));
    tmp_12_i_i_fu_608_p2 <= "1" when (unsigned(tmp_11_cast_i_i_fu_604_p1) < unsigned(tmp_2_reg_711)) else "0";
    tmp_14_i_i_fu_685_p2 <= "1" when (row_ind_V_fu_679_p2 = ap_const_lv13_3) else "0";
    tmp_15_i_i_fu_629_p2 <= "1" when (p_0177_0_i_i_i_reg_280 = ap_const_lv13_0) else "0";
    tmp_1_cast_i_i_fu_424_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_p_1_i_i_phi_fu_248_p4),16));
    tmp_1_fu_416_p1 <= p_src_mat_rows_read_dout(16 - 1 downto 0);
    tmp_1_i_i_fu_439_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_1_i_i_reg_244),32));
    tmp_2_fu_420_p1 <= p_src_mat_cols_read_dout(16 - 1 downto 0);
    tmp_2_i_i_fu_428_p2 <= "1" when (unsigned(tmp_1_cast_i_i_fu_424_p1) < unsigned(tmp_2_reg_711)) else "0";
    tmp_3_fu_585_p1 <= p_2_i_i_reg_256(2 - 1 downto 0);
    tmp_3_i_i_fu_580_p2 <= "1" when (unsigned(tmp_6_cast99_i_i_fu_472_p1) < unsigned(tmp_1_reg_705)) else "0";
    tmp_5_cast100_i_i_fu_445_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_reg_705),17));
    tmp_6_cast99_i_i_fu_472_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_6_i_i_reg_268),16));
    tmp_6_cast_i_i_fu_454_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_6_i_i_reg_268),17));
    tmp_7_i_i_fu_458_p2 <= "1" when (unsigned(tmp_6_cast_i_i_fu_454_p1) < unsigned(op2_assign_reg_744)) else "0";
    tmp_8_i_i_fu_476_p2 <= "1" when (p_2_i_i_reg_256 = ap_const_lv13_2) else "0";
    tmp_9_i_i_fu_482_p2 <= "1" when (p_2_i_i_reg_256 = ap_const_lv13_0) else "0";
    tmp_fu_534_p2 <= (tmp_8_i_i_fu_476_p2 or sel_tmp2_fu_524_p2);
    tmp_i_i_fu_488_p2 <= "1" when (p_2_i_i_reg_256 = ap_const_lv13_1) else "0";
end behav;
